import{Q as m}from"./QInput-CJt-xT-X.js";import{_ as f,Q as g,a as C}from"./_plugin-vue_export-helper-DE_L9tpe.js";import{Q as b}from"./QSeparator-DlYTESWS.js";import{r as a,c as x,o as d,w as n,a as o,b as r,g as k,i as v,t as _,Q as p,L as y}from"./app-B9ngRPxC.js";import{Q}from"./QCardActions-BXiB0Jwk.js";import{Q as V}from"./QForm-QL7SKRAj.js";import{A as h}from"./Authenticated-Bi_brb96.js";import{C as S}from"./CodeMirrorEditor-ULlk9JEz.js";import"./use-key-composition-CcPeSjoe.js";import"./use-id-Bsf40j7l.js";import"./focus-manager-BJWzFvJg.js";import"./QToolbar-tVFOb00I.js";import"./QItemSection-Dr7pKUWg.js";import"./QItemLabel-CDx0sUKF.js";import"./QItem-DGC_oh8H.js";import"./QList-CauX3dmB.js";import"./use-timeout-BLTl8fd9.js";import"./QBtnGroup-uFzmfQIw.js";import"./format-DSaZ9Sxz.js";import"./use-model-toggle-D3uVg552.js";import"./touch-BjYP5sR0.js";const w={components:{AuthenticatedLayout:h,CodeMirrorEditor:S},data(){return{form:y({name:"",description:"",tinker_code:`// Example: Get all active clients
$clients = \\App\\Models\\Client::where('status', 'active')
    ->get();

foreach ($clients as $client) {
    echo $client->name . " - " . $client->fly_org_id . "\\n";
}`}),editorOptions:{mode:"text/x-php",theme:"material-darker",lineNumbers:!0,lineWrapping:!0,autoCloseBrackets:!0,matchBrackets:!0,indentUnit:4,tabSize:4,indentWithTabs:!1,extraKeys:{"Ctrl-/":"toggleComment","Cmd-/":"toggleComment"}}}},methods:{onCodeChange(s){this.form.tinker_code=s},submit(){this.form.post(route("scripts.store"),{onSuccess:()=>{this.$q.notify({type:"positive",message:"Script created successfully"})}})}}},q={class:"q-gutter-md"},B={class:"q-gutter-md"},A={key:0,class:"text-negative text-caption q-mt-sm"};function E(s,e,L,N,t,l){const u=a("CodeMirrorEditor"),c=a("AuthenticatedLayout");return d(),x(c,null,{default:n(()=>[o("div",q,[e[6]||(e[6]=o("div",{class:"row items-center justify-between q-mb-md"},[o("div",{class:"text-h5"},"Create Script")],-1)),r(g,null,{default:n(()=>[r(V,{onSubmit:l.submit},{default:n(()=>[r(C,null,{default:n(()=>[o("div",B,[r(m,{modelValue:t.form.name,"onUpdate:modelValue":e[0]||(e[0]=i=>t.form.name=i),label:"Script Name",filled:"",error:!!t.form.errors.name,"error-message":t.form.errors.name},null,8,["modelValue","error","error-message"]),r(m,{modelValue:t.form.description,"onUpdate:modelValue":e[1]||(e[1]=i=>t.form.description=i),label:"Description",filled:"",type:"textarea",rows:"3",error:!!t.form.errors.description,"error-message":t.form.errors.description},null,8,["modelValue","error","error-message"]),o("div",null,[e[4]||(e[4]=o("div",{class:"text-subtitle2 q-mb-sm"},"Tinker Code",-1)),e[5]||(e[5]=o("div",{class:"text-caption text-grey-7 q-mb-md"}," Write PHP code that will be executed in Laravel Tinker context. Variables like $client will be injected when executing with a client context. ",-1)),r(u,{modelValue:t.form.tinker_code,"onUpdate:modelValue":e[2]||(e[2]=i=>t.form.tinker_code=i),options:t.editorOptions,onInput:l.onCodeChange},null,8,["modelValue","options","onInput"]),t.form.errors.tinker_code?(d(),k("div",A,_(t.form.errors.tinker_code),1)):v("",!0)])])]),_:1}),r(b),r(Q,{align:"right"},{default:n(()=>[r(p,{flat:"",label:"Cancel",onClick:e[3]||(e[3]=i=>s.$inertia.visit(s.route("scripts.index")))}),r(p,{type:"submit",color:"primary",label:"Create Script",loading:t.form.processing},null,8,["loading"])]),_:1})]),_:1},8,["onSubmit"])]),_:1})])]),_:1})}const te=f(w,[["render",E]]);export{te as default};
